spring.application.name=registerIf
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

# CORREÇÃO 1: Datasource URL usa a variável do Docker Compose (pg)
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/registerIf}

# CORREÇÃO DE VARIAVEIS: Usar as variáveis que o Docker Compose injeta ou variáveis do Spring.
# Nota: Estou assumindo que as variáveis do Docker são SPRING_DATASOURCE_USERNAME e SPRING_DATASOURCE_PASSWORD.
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

server.port=8080

security.jwt.expiration=60
security.jwt.key=${token.jwt}

# CORREÇÃO 2: Flyway URL usa a mesma variável do Docker Compose (pg)
spring.flyway.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/registerIf}
spring.flyway.user=${SPRING_DATASOURCE_USERNAME}
spring.flyway.password=${SPRING_DATASOURCE_PASSWORD}

spring.flyway.encoding=UTF-8
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.sql-migration-prefix=V
spring.flyway.sql-migration-suffixes=.sql

spring.springdoc.api-docs.resolve-schema-properties=true

# CORREÇÃO 3: RabbitMQ Host usa o nome do serviço Docker (rabbit)
spring.rabbitmq.host=rabbit
spring.rabbitmq.username=pontoif
spring.rabbitmq.password=${RABBITMQ_PASSWORD}
spring.rabbitmq.port=5672
spring.rabbitmq.virtual-host=/
